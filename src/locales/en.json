{
  "prompt": {
    "language": "🔧 Which language are you using?",
    "languageTypescript": "TypeScript (.ts)",
    "languageJavascript": "JavaScript (.js)",
    "outputDir": "📁 Which folder to generate files?",
    "baseDir": "📂 What base folder? (leave empty for none, e.g., 'src')",
    "types": "📋 Which types do you want to generate?",
    "typesEntities": "entities (data classes)",
    "typesRepositories": "Repositories (data access)",
    "typesInterfaces": "Interfaces (contracts)",
    "typesHooks": "Hooks (custom hooks)",
    "typesEnums": "Enums (enumerations)",
    "typesValidate": "You must choose at least one type!",
    "featureName": "🏗️  What is the feature name?",
    "featureNameRequired": "Feature name is required!",
    "featureNameInvalid": "Name must start with a letter and contain only letters and numbers!",
    "nestedPath": "📂 Do you want to create in a subfolder? (e.g., auth/login)",
    "nestedPathInput": "📂 Enter the path (e.g., auth):",
    "nestedPathRequired": "Path is required when selected!",
    "configSave": "💾 Save these settings for future runs?",
    "interactive": "🤖 Use interactive mode? (recommended for first time)",
    "locale": "🌍 Choose language / Escolha o idioma:",
    "localePortuguese": "Português (pt-BR)",
    "localeEnglish": "English (en)"
  },
  "message": {
    "interactiveMode": "🤖 Interactive Mode",
    "configuringProject": "⚙️  Configuring project...",
    "configSaved": "✅ Configuration saved!",
    "generating": "🏗️  Generating feature \"{0}\" in {1}...",
    "currentConfig": "📋 Current configuration:",
    "configLanguage": "Language:",
    "configLocale": "Locale:",
    "configBaseDir": "Base folder:",
    "configBaseDirNone": "(none)",
    "configOutputDir": "Output folder:",
    "configDefaultTypes": "Default types:",
    "configExtension": "Extension:"
  },
  "error": {
    "featureRequired": "❌ Error: Feature name is required",
    "featureRequiredHint1": "Use: npx genpaths create <feature-name>",
    "featureRequiredHint2": "Or use: npx genpaths create --interactive",
    "createCommandHint": "Use: npx genpaths create <feature-name>",
    "generic": "❌ Error:",
    "invalidConfig": "⚠️  Invalid configuration file, using defaults",
    "invalidFeatureName": "❌ Error: Invalid feature name: \"{0}\"",
    "featureNameStartsWithDash": "Name cannot start with '-' or '--' (looks like a command line option)",
    "featureNameStartsWithDashHint": "Did you mean to use an option? Ex: npx genpaths create User --locale en",
    "featureNameMustStartWithLetter": "Name must start with a letter (a-z, A-Z)",
    "featureNameInvalidCharacters": "Name contains invalid characters",
    "featureNameValidFormat": "Valid format: letters, numbers, underscore (_) and slash (/). Ex: User, user_profile, auth/Login",
    "unknownCommand": "❌ Error: Unknown command: \"{0}\"",
    "unknownCommandHint": "Valid commands: create, init, config, defaults"
  },
  "help": {
    "title": "🚀 Path Generator - Automatic file structure generator",
    "usage": "Usage:",
    "usageLine1": "npx genpaths create <name> [options]",
    "commands": "Commands:",
    "commandsCreate": "Generate feature structure",
    "commandsDefaults": "Copy default templates for customization",
    "commandsInit": "Configure project interactively",
    "commandsConfig": "Show current configuration",
    "options": "Options:",
    "optionsTypes": "Types to generate (e.g., entities,repositories,hooks)",
    "optionsOnly": "Generate only specified types",
    "optionsExcept": "Generate all types except specified ones",
    "optionsBaseDir": "Project base folder (overrides config)",
    "optionsOutputDir": "Output folder (overrides config)",
    "optionsInteractive": "Force interactive mode",
    "optionsJs": "Generate JavaScript files",
    "optionsTs": "Generate TypeScript files",
    "optionsLocale": "Set language (pt-BR or en)",
    "optionsHelp": "Show this help",
    "availableTypes": "Available types:",
    "examples": "Examples:",
    "moreInfo": "For more information: https://github.com/artmoura/genpaths"
  }
}
